{"ast":null,"code":"const cart = [];\nconst handleCart = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : cart;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const product = action.payload;\n  switch (action.type) {\n    case \"ADDITEM\":\n      // Check if product already in cart\n      const exist = state.find(x => x.id === product.id);\n      if (exist) {\n        // Increase the quantity\n        return state.map(x => x.id === product.id ? {\n          ...x,\n          qty: x.qty + 1\n        } : x);\n      } else {\n        return [...state, {\n          ...product,\n          qty: 1\n        }];\n      }\n      break;\n    case \"DELITEM\":\n      const exist2 = state.find(x => x.id === product.id);\n      if (exist2.qty === 1) {\n        return state.filter(x => x.id !== exist2.id);\n      } else {\n        return state.map(x => x.id === product.id ? {\n          ...x,\n          qty: x.qty - 1\n        } : x);\n      }\n      break;\n    default:\n      return state;\n      break;\n  }\n};\nexport default handleCart;","map":{"version":3,"names":["cart","handleCart","state","arguments","length","undefined","action","product","payload","type","exist","find","x","id","map","qty","exist2","filter"],"sources":["/Users/amankaranjit/Desktop/Test-Repo/src/redux/reducer/handleCart.js"],"sourcesContent":["const cart = []\r\n\r\nconst handleCart = (state=cart, action) =>{\r\n    const product = action.payload\r\n    switch(action.type){\r\n        case \"ADDITEM\":\r\n            // Check if product already in cart\r\n            const exist = state.find((x) => x.id === product.id)\r\n            if(exist){\r\n                // Increase the quantity\r\n                return state.map((x)=>x.id ===product.id?{...x, qty: x.qty+1}:x)\r\n            }\r\n            else{\r\n                return [...state, {...product, qty:1}]\r\n            }\r\n            break;\r\n        case \"DELITEM\":\r\n            const exist2 = state.find((x) => x.id === product.id)\r\n            if(exist2.qty === 1){\r\n                return state.filter((x)=>x.id!==exist2.id)\r\n            }\r\n            else{\r\n                return state.map((x)=> x.id===product.id?{...x, qty:x.qty-1}:x)\r\n            }\r\n            break;\r\n\r\n        default:\r\n            return state\r\n            break;\r\n    }\r\n}\r\n\r\nexport default handleCart"],"mappings":"AAAA,MAAMA,IAAI,GAAG,EAAE;AAEf,MAAMC,UAAU,GAAG,SAAAA,CAAA,EAAuB;EAAA,IAAtBC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAACH,IAAI;EAAA,IAAEM,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAClC,MAAME,OAAO,GAAGD,MAAM,CAACE,OAAO;EAC9B,QAAOF,MAAM,CAACG,IAAI;IACd,KAAK,SAAS;MACV;MACA,MAAMC,KAAK,GAAGR,KAAK,CAACS,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,CAAC;MACpD,IAAGH,KAAK,EAAC;QACL;QACA,OAAOR,KAAK,CAACY,GAAG,CAAEF,CAAC,IAAGA,CAAC,CAACC,EAAE,KAAIN,OAAO,CAACM,EAAE,GAAC;UAAC,GAAGD,CAAC;UAAEG,GAAG,EAAEH,CAAC,CAACG,GAAG,GAAC;QAAC,CAAC,GAACH,CAAC,CAAC;MACpE,CAAC,MACG;QACA,OAAO,CAAC,GAAGV,KAAK,EAAE;UAAC,GAAGK,OAAO;UAAEQ,GAAG,EAAC;QAAC,CAAC,CAAC;MAC1C;MACA;IACJ,KAAK,SAAS;MACV,MAAMC,MAAM,GAAGd,KAAK,CAACS,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKN,OAAO,CAACM,EAAE,CAAC;MACrD,IAAGG,MAAM,CAACD,GAAG,KAAK,CAAC,EAAC;QAChB,OAAOb,KAAK,CAACe,MAAM,CAAEL,CAAC,IAAGA,CAAC,CAACC,EAAE,KAAGG,MAAM,CAACH,EAAE,CAAC;MAC9C,CAAC,MACG;QACA,OAAOX,KAAK,CAACY,GAAG,CAAEF,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAGN,OAAO,CAACM,EAAE,GAAC;UAAC,GAAGD,CAAC;UAAEG,GAAG,EAACH,CAAC,CAACG,GAAG,GAAC;QAAC,CAAC,GAACH,CAAC,CAAC;MACnE;MACA;IAEJ;MACI,OAAOV,KAAK;MACZ;EACR;AACJ,CAAC;AAED,eAAeD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}